//操作步骤

一.基本搭建（create-react-app + antd-mobile配置）
    1. 安装Facebook官方推出的react脚手架工具create react app,（全局安装）
        npm install -g create-react-app 
    2. 安装yarn, （全局安装）
        npm install -g yarn 

        使用注意：yarn与npm 

            NPM	                                YARN	                         说明
            
            npm init	                        yarn init	                     初始化某个项目
            npm install/link	                yarn install/link	             默认的安装依赖操作
            npm install cloud —save	            yarn add cloud	                 安装某个依赖，并且默认保存到package.
            npm uninstall cloud —save	        yarn remove cloud	             移除某个依赖项目
            npm install cloud —save-dev	        yarn add cloud —dev	             安装某个开发时依赖项目
            npm update cloud —save	            yarn upgrade tac                 更新某个依赖项目
            npm install cloud --global	        yarn global add cloud	         安装某个全局依赖项目
            npm publish/login/logout	        yarn publish/login/logout	     发布/登录/登出，一系列NPM Registry操作
            npm run/test	                    yarn run/test	                 运行某个命令


    3. 使用create react app初始化一个react项目,并进入此项目 （create react app [项目名称]）
          - create-react-app cloud
          - cd cloud  
    4. antd-mobile（来自蚂蚁金服）,使用yarn来添加 
        yarn add antd-mobile
    5. 安装其他的一些开发依赖 
        yarn add --dev babel-plugin-import svg-sprite-loader@0.3.1 less less-loader postcss-pxtorem 
    6.初始化项目 （注意 配置前运行 npm run eject  才能看到整个项目的配置细节）
        （1）config目录下的webpack.config.dev.js,这个文件是作为开发时的webpack配置文件
        （2）引入postcss-pxtorem模块，用于px转rem
            const pxtorem = require('postcss-pxtorem');
        （3）在webpack.config.dev.js中找到exclude追加两行代码，用于加载less和svg文件
            module.exports = {
                module: {
                    rules: [
                        ...
                        {
                            exclude: [
                            /\.html$/,
                            /\.(js|jsx)$/,
                            /\.css$/,
                            /\.json$/,
                            /\.less$/,//追加
                            /\.svg$/,//追加
                            ],
                            ...
                        }
                    ]
                }
            }
        （4）添加按需加载文件处理插件
            module.exports = {
                module: {
                    rules: [
                        {
                            test: /\.(js|jsx)$/,
                            ...
                            options: {
                            //追加
                            plugins: [
                                ['import', { libraryName: 'antd-mobile', style: true }],
                            ],
                            ...
                            },
                        },
                    ]
                }
            }
        （5）添加svg处理
            module.exports = {
                module: {
                    rules: [
                        ...
                        {
                            test: /\.(svg)$/i,
                            loader: 'svg-sprite-loader',
                            include: [
                            require.resolve('antd-mobile').replace(/warn\.js$/, ''),  // antd-mobile使用的svg目录
                            path.resolve(__dirname, '../src/'),  // 个人的svg文件目录，如果自己有svg需要在这里配置
                            ]
                        },
                        ...
                    ]
                }
            }
        （6）添加less处理
            module.exports = {
                module: {
                    rules: [
                        ...
                        {
                            test: /\.less$/,
                            use: [
                            require.resolve('style-loader'),
                            require.resolve('css-loader'),
                            {
                                loader: require.resolve('postcss-loader'),
                                options: {
                                ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
                                plugins: () => [
                                    autoprefixer({
                                    browsers: ['last 2 versions', 'Firefox ESR', '> 1%', 'ie >= 8', 'iOS >= 8', 'Android >= 4'],
                                    }),
                                    pxtorem({ rootValue: 100, propWhiteList: [] })
                                ],
                                },
                            },
                            {
                                loader: require.resolve('less-loader'),
                                options: {
                                modifyVars: { "@primary-color": "#1DA57A" },
                                },
                            },
                            ],
                        }
                        ...
                    ]
                }
            }
        7.安装依赖(根据启动项目后错误提示安装相关的依赖包)
            yarn add babel-loader
            yarn add webpack-dev-server 
        8.启动项目 
            yarn start 

二、遇到的问题
    1.加载antd-mobile 
     利用 babel-plugin-import 这个插件，
        可以在webpack里面配置，也可以在package.json 如下
        "babel": {
            "presets": [
            "react-app"
            ],
            "plugins": [
            [
                "import",
                {
                "libraryName": "antd-mobile",
                "style": "css"
                }
            ]
            ]
        },

    2.路由配置 router和redux 结合 （roter 4.x 版本有很大差异）
      路由文件或app.js
        ---------------------------------------
        import React,{Component} from 'react';
        import {
        BrowserRouter as Router,
        Route,
        Switch
        } from 'react-router-dom';
        import Home from '../containers/Home';
        import User from '../containers/User';
        import Search from '../containers/Search';
        import Detail from '../containers/Detail';
        import City from '../containers/City';
        import NotFound from '../containers/404Page';
        class App extends Component{
        constructor(props, context){
            super(props, context);
            this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate;
        }
        render(){
            return (
            <Router>
                <div>
                {/**
                * 这里可以公共的样式,比如 头部, 尾部, 等.
                */}
                header
                {/*结合Switch组件可以匹配到都匹配不到的路劲,404等...*/}
                <Switch>
                    <Route path='/' exact component={Home}/>
                    <Route path='/user'  component={User}/>
                    <Route path='/search'  component={Search}/>
                    <Route path='/detail'  component={Detail}/>
                    <Route path='/city'  component={City}/>
                    <Route component={NotFound}/>
                </Switch>
                footer
                </div>
            </Router>
            );
        }
        }
        export default App;


        --------------------------------------

        最外层写法
        --------------------
        import React from 'react';
        import {render} from 'react-dom';
        import App from './routerMap';
        //这里使用render渲染
        render(
        <Provider  store={store}>
            <App/>
        </Provider>,
        document.getElementById('root')
        );
        --------------